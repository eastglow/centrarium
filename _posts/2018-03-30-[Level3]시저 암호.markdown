---
layout: post
title:  "[Level3]시저 암호"
date:   2018-03-30 21:40:00
author: EastGlow
categories: 프로그래머스
---
## 문제

어떤 문장의 각 알파벳을 일정한 거리만큼 밀어서 다른 알파벳으로 바꾸는 암호화 방식을 시저 암호라고 합니다.  
A를 3만큼 밀면 D가 되고 z를 1만큼 밀면 a가 됩니다. 공백은 수정하지 않습니다.  
보낼 문자열 s와 얼마나 밀지 알려주는 n을 입력받아 암호문을 만드는 caesar 함수를 완성해 보세요.  
“a B z”,4를 입력받았다면 “e F d”를 리턴합니다.  


## 풀이 1
~~~
class Caesar {
    String caesar(String s, int n) {
        char[] array = s.toCharArray();

        // 함수를 완성하세요.
        for(int i=0; i<array.length; ++i){
            int code = array[i] + n%26;

            if(65 <= array[i] && array[i] <= 90){
                if(code > 90){
                	code = 65 + (code - 90) - 1;
                }
            }
            else if(97 <= array[i] && array[i] <= 122){
                if(code > 122){
                	code = 97 + (code - 122) - 1;
                }
            }

            if(array[i] != 32) array[i] = (char) code;

            if(65 <= array[i] && array[i] <= 90){
                if(code > 90){
                	code = 65 + (code - 90) - 1;
                }
            }
            else if(97 <= array[i] && array[i] <= 122){
                if(code > 122){
                	code = 97 + (code - 122) - 1;
                }
            }

            if(array[i] != 32) array[i] = (char) code;
        }

        return String.valueOf(array);
    } 

    public static void main(String[] args) {
        Caesar c = new Caesar();
        System.out.println("s는 'a B z', n은 4인 경우: " + c.caesar("a B z",4));
    }
}
~~~
toCharArray()를 통해 입력받은 String 문자열을 char[]로 변환해준다. 그리고 for문을 통해 한글자씩 입력받은 숫자만큼 밀어주고 바꿔준다. 처음에 좀 헤맸었는데 답이 안 나오던 이유가 int code 를 선언할 때, n을 그냥 더해버려서 그랬다. 알파벳 개수인 26개만큼 나눠준 후 나머지 값을 더해주는게 맞았었다.

## 풀이 2
~~~
class Caesar {
    String caesar(String s, int n) {
        String result = "";
        n = n % 26;
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            if (Character.isLowerCase(ch)) {
            	ch = (char) ((ch - 'a' + n) % 26 + 'a');
            } else if (Character.isUpperCase(ch)) {
            	ch = (char) ((ch - 'A' + n) % 26 + 'A');
            }
            result += ch;
        }
        return result;
    }

    public static void main(String[] args) {
        Caesar c = new Caesar();
        System.out.println("s는 'a B z', n은 4인 경우: " + c.caesar("a B z", 4));
    }
}
~~~
Character 안의 메서드를 잘 활용한 풀이이다. isLowerCase랑 isUpperCase를 통해 대소문자를 구분한 후, 입력받은 숫자만큼 밀어준 풀이이다.